##############################################################################
# The main properties file to configure your application
#
# Properties can be prefixed by "%".
# "%"" matches a mode you can set as system property. For instance when you
# are using maven you can do: mvn -Dmode = test jetty:run
#
# Using that the following property:
# %test.myproperty = test property
# would overwrite the property
# myproperty = my property
#
# You can define as many environments as you want. Simply set them in the mode.
##############################################################################

## ------------------------------
## Log System
## ------------------------------

logback.configurationFile = conf/logback.xml
%dev.logback.configurationFile = conf/logback_dev.xml

## ------------------------------
## host and port configuration
## ------------------------------

application.url = localhost
application.port.http = 8080
application.port.https = 8443
#application.url.http = http://${application.url}:${application.port.http}
#application.url.https = https://${application.url}:${application.port.https}
application.url.http =
application.url.https =

## ------------------------------
## starter configuration
## ------------------------------

# delete all tables and get an empty database
starter.droptables = false

# import a dummy customer, which is set in assets/files/customer.xml
starter.importCustomer = true

## ------------------------------
## locale properties
## ------------------------------

#ISO Language Code, optionally followed by a valid ISO Country Code. 
application.languages = en

# currency, e.g. $, â‚¬ 
application.currency = $

# shipping costs
application.shippingCosts = 7.00

# tax
application.tax = 0.06

# unit of length, e.g. cm, in
application.unitLength = in

## ------------------------------
## Ebean configuration
## ------------------------------

# we use a embedded ebeans in regular config
ebean.datasource.databaseUrl = jdbc:h2:data/posters/posters;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE

# in memory db when testing:
%test.ebean.datasource.databaseUrl = jdbc:h2:mem:tests;DB_CLOSE_DELAY=-1

# database username
ebean.datasource.username = sa
# database password
ebean.datasource.password = 
# db-driver
ebean.datasource.databaseDriver = org.h2.Driver
ebean.logging = all

# add additional Models which were not located at package models.* here
ebean.models = models.BillingAddress,models.Cart,models.CartProduct,models.CreditCard,models.Customer,models.Order,models.OrderProduct,models.PosterSize,models.Product,models.ProductPosterSize,models.ShippingAddress,models.SubCategory,models.TopCategory, models_backoffice.User

# generates and runs the ddl
ebean.ddl.generate = false
ebean.ddl.run = false
%dev.ebean.ddl.generate = false
%dev.ebean.ddl.run = false
%test.ebean.ddl.generate = true
%test.ebean.ddl.run = true

ebean.datasource.minConnections = 1
ebean.datasource.maxConnections = 25
ebean.datasource.isolationlevel = read_committed
ebean.datasource.heartbeatsql = select 1

## ------------------------------
## application properties
## ------------------------------

application.name = demo poster store

application.cookie.prefix = NINJA

application.basedir = 

application.secret = 234523453tsfgdfgsdgfw345g

application.session.expire_time_in_seconds = 3600
application.session.send_only_if_changed = true
application.session.transferred_over_https_only = false

# defines, how many products should be shown on one page
application.pageSize = 6

## ------------------------------
## regular expressions
## ------------------------------

regex.zip = [0-9]+
regex.name = [\u00c4\u00e4\u00d6\u00f6\u00dc\u00fc\u00dfA-Za-z ]+
regex.creditCard = 4[0-9]{12}(?:[0-9]{3})?
regex.email = [\u00c4\u00e4\u00d6\u00f6A\u00dc\u00fc\u00dfA-Za-z0-9._%+-]+@[\u00c4\u00e4\u00d6\u00f6A\u00dc\u00fc\u00dfA-Za-z0-9.-]+.[A-Za-z]{2,4}
regex.productCount = [0-9]{1,3}
